 1. Inheritance Example
class Animal {
    void sound() {
        System.out.println("Animal makes sound");
    }
}

class Dog extends Animal {
    void sound() {
        System.out.println("Dog barks");
    }
}

public class InheritanceDemo {
    public static void main(String[] args) {
        Dog d = new Dog();
        d.sound();
    }
}
 2. Interface Implementation
interface Drawable {
    void draw();
}

class Circle implements Drawable {
    public void draw() {
        System.out.println("Drawing Circle");
    }
}

public class InterfaceDemo {
    public static void main(String[] args) {
        Drawable obj = new Circle();
        obj.draw();
    }
}
 3. Abstract Class Example
abstract class Shape {
    abstract void area();
}

class Square extends Shape {
    void area() {
        System.out.println("Area = side × side");
    }
}

public class AbstractDemo {
    public static void main(String[] args) {
        Shape s = new Square();
        s.area();
    }
}
 4. Try-Catch Block Example
public class ExceptionDemo {
    public static void main(String[] args) {
        try {
            int result = 10 / 0;
        } catch (ArithmeticException e) {
            System.out.println("Cannot divide by zero");
        }
    }
}
 5. Multiple Catch Blocks
public class MultiCatch {
    public static void main(String[] args) {
        try {
            int[] arr = new int[3];
            System.out.println(arr[5]);
        } catch (ArithmeticException e) {
            System.out.println("Math error");
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("Index out of range");
        }
    }
}
6. Throw Keyword Example
public class ThrowExample {
    static void checkAge(int age) {
        if (age < 18)
            throw new ArithmeticException("Not eligible");
        else
            System.out.println("Eligible");
    }

    public static void main(String[] args) {
        checkAge(15);
    }
}
 7. String Comparison
public class StringCompare {
    public static void main(String[] args) {
        String a = "Java";
        String b = "Java";
        System.out.println(a.equals(b) ? "Equal" : "Not Equal");
    }
}
 8. Convert String to Integer
public class StringToInt {
    public static void main(String[] args) {
        String str = "123";
        int num = Integer.parseInt(str);
        System.out.println("Number: " + num);
    }
}
 9. Selection Sort
public class SelectionSort {
    public static void main(String[] args) {
        int[] arr = {29, 10, 14, 37, 14};
        for (int i = 0; i < arr.length - 1; i++) {
            int min = i;
            for (int j = i+1; j < arr.length; j++) {
                if (arr[j] < arr[min]) min = j;
            }
            int temp = arr[min];
            arr[min] = arr[i];
            arr[i] = temp;
        }
        for (int num : arr)
            System.out.print(num + " ");
    }
}
 10. Binary Search
public class BinarySearch {
    public static void main(String[] args) {
        int[] arr = {2, 4, 6, 8, 10};
        int key = 6, low = 0, high = arr.length - 1, mid;
        boolean found = false;

        while (low <= high) {
            mid = (low + high) / 2;
            if (arr[mid] == key) {
                found = true;
                break;
            } else if (arr[mid] < key) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }

        System.out.println(found ? "Found" : "Not Found");
    }
}
 11. File Writing
import java.io.FileWriter;
import java.io.IOException;

public class WriteFile {
    public static void main(String[] args) {
        try {
            FileWriter writer = new FileWriter("output.txt");
            writer.write("Hello Java File!");
            writer.close();
            System.out.println("File written successfully");
        } catch (IOException e) {
            System.out.println("Error occurred");
        }
    }
}
 12. File Reading
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class ReadFile {
    public static void main(String[] args) {
        try {
            File file = new File("output.txt");
            Scanner sc = new Scanner(file);
            while (sc.hasNextLine())
                System.out.println(sc.nextLine());
            sc.close();
        } catch (FileNotFoundException e) {
            System.out.println("File not found");
        }
    }
}
13. Check Prime using Function
public class PrimeFunction {
    static boolean isPrime(int n) {
        if (n < 2) return false;
        for (int i = 2; i <= n / 2; i++)
            if (n % i == 0)
                return false;
        return true;
    }

    public static void main(String[] args) {
        System.out.println(isPrime(17) ? "Prime" : "Not Prime");
    }
}
 14. Pattern Printing – Star Triangle
public class StarTriangle {
    public static void main(String[] args) {
        int rows = 5;
        for (int i = 1; i <= rows; i++) {
            for (int j = 1; j <= i; j++)
                System.out.print("* ");
            System.out.println();
        }
    }
}
15. Number Pyramid
public class NumberPyramid {
    public static void main(String[] args) {
        int rows = 5;
        for (int i = 1; i <= rows; i++) {
            for (int j = 1; j <= i; j++)
                System.out.print(j + " ");
            System.out.println();
        }
    }
}
